var message = document.getElementById("notify");
var watcher = null;
var travelMode = google.maps.DirectionsTravelMode.TRANSIT; // Default transportation
var currentMode;
var destination = "";
var source = "";
var routeFound = false;
var marker = null;
var googleMap = null;
var currPosition;
var repeat;
var i;
var otherMarkers = [];
var currentMarker;
var allMarkers = null;
var infoWindow;
var allInfoWindows = [];

// Update location which will be posted to the database
function updatePosition( position ){
    currPosition = position;
}

// Initializes geolocating and start tracking locations real time
function execute(){
    console.log(allLocations);
    if(navigator.geolocation){
        var options = {
            enableHighAccuracy: true,
            timeout : Infinity,
            maximumAge: 0
        };
        // Watch position real time
        watcher = navigator.geolocation.watchPosition(success, fail, options);
        
        // Periodically upload information to database
        navigator.geolocation.getCurrentPosition(function(position) {
        updatePosition(position);
            repeat = setInterval(function(){
                var lat = currPosition.coords.latitude;
                var lng = currPosition.coords.longitude;
                // Upload location
                jQuery.ajax({
                    type: "POST", 
                    url:  "./locations/location.php", 
                    data: { lat: lat, lng:lng }, 
                    success: function (response) {
                        console.log(response);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                       console.log(textStatus, errorThrown);
                    }
                });
                // Update positions of other members
                for (i = 0; i < allLocations.length; i++) {  
                  // Retrieve locations from array generated by the database.
                  var googleLatLngOthers = new google.maps.LatLng(allLocations[i]['latitude'], allLocations[i]['longitude']);
                  // Add or update locations of all other markers
                  addOtherMarkers(allLocations[i]['name'], googleLatLngOthers, googleMap, allLocations[i]['name'], i);
                }                 
            }, 5000);
        }, fail); 
        
    } else {
        message.innerHTML = "Geolocation is not supported by this browser.";
    }
    
    var button = document.getElementById("stop");
    button.onclick = function(){
        clearWatch();
    };
};

// Stop updating location real time
function clearWatch(){
        if(watcher){
            navigator.geolocation.clearWatch(watcher);
            watcher = null;
        }
        clearInterval(repeat);
}

// Find current location and fill into field
$("#get-pos-s, #get-pos-d").click(function (event){
        event.preventDefault();
        // ID clicked un-determined
        var myId = null;
        // Button state of source button
        var srcState = false;0
        // Source button clicked
        if(this.id == "get-pos-s"){
            myId = document.getElementById("source");
            srcState = true;
        } else {
            myId = document.getElementById("destination");
        }
        // Get current position in latitude and longitude and translate it into an address
        navigator.geolocation.getCurrentPosition(function(address) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
              "location": new google.maps.LatLng(address.coords.latitude, address.coords.longitude)
            },
            function(results, status) {
              if (status == google.maps.GeocoderStatus.OK){
                // Set fields to the appropriate address
                myId.value = results[0].formatted_address;
                // Save the last known state of the field
                if(srcState){
                    localStorage['source'] = document.getElementById("source").value;
                } else {
                    localStorage['destination'] = document.getElementById("destination").value;
                }
              }
              else{
                message.innerHTML = ("Could not retrieve address");
              }
            });
        }, fail,
        { // Options
            enableHighAccuracy: true,
            timeout: Infinity
        });        
});

// Error handler
function fail(err){
    switch(err.code){
        case error.PERMISSION_DENIED:
            errorMsg = "Permission denied by user.";
            break;
        case error.POSITION_UNAVAILABLE:
            errorMsg = "Position of the user not available.";
            break;
        case error.TIMEOUT:
            errorMsg = "Request timed out."
            break;
        default:    
            errorMsg = "An unknown error occurred."
    } 
}

function success(pos){
    var googleLatLng = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
    if(!googleMap){
        var mapOptions = {
            zoom: 5,
            center : googleLatLng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var displayMap = document.getElementById("map");
        googleMap = new google.maps.Map(displayMap, mapOptions);    
    }
    // Optional display message
    // message.innerHTML = ("Latitude: " + pos.coords.latitude + " Longitude: " + pos.coords.longitude);
    // Draw marker of current position (main user)
    addMarker("Me", googleLatLng, googleMap, "<b>I'm here!</b>");
    
    // No source entered, use current position
    if(source == ""){
        source = googleLatLng;
    }
    
    // Route not generated yet, generate route
    if(!routeFound){
        routeFound = true;
        findRoute(source, destination, googleMap);
    }   
}

// Generate route from source to destination
function findRoute(src, dest, map){
        var directionsService = new google.maps.DirectionsService();
        // No destination was entered, use source location as destination.
        if(dest == ""){
            dest = src;
        }
    
        var directionsRequest = {
          origin: src,
          destination: dest,
          travelMode: travelMode,
          unitSystem: google.maps.UnitSystem.METRIC
        };
        directionsService.route(
          directionsRequest,
          function(response, status){
            if (status == google.maps.DirectionsStatus.OK){
              var directionsDisplay = new google.maps.DirectionsRenderer({
                map: map,
                directions: response
              });
                directionsDisplay.setPanel(document.getElementById('panel'));
            }
            else{
             message.innerHTML = ("Unable to retrieve your route<br />");
            }
          }
        );    
}

// Adds or updates the marker for the user's current position
function addMarker(title, googleLatLng, map, text){
    if(!marker){
         var markerOptions = {
            position: googleLatLng,
            map: map,
            title: title,
            animation: google.maps.Animation.BOUNCE,
            icon: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png"
        };       
         marker = new google.maps.Marker(markerOptions); 
         infoWindow = new google.maps.InfoWindow({ 
            content: text,
            position: googleLatLng
        });
        // Window that pops up with text to indicate clicked user
        google.maps.event.addListener(marker, "click", function(){
           infoWindow.open(map); 
        });       
    } else {
        marker.setPosition(googleLatLng);
        infoWindow.setPosition(googleLatLng);
    }
}

// Adds or updates the marker for the positions of other users in the group
function addOtherMarkers(title, googleLatLng, map, text, index){
    // No markers exist, add them
    var infoWindow;
    if(!otherMarkers[index]){
         var markerOptions = {
            position: googleLatLng,
            map: map,
            title: title,
            animation: google.maps.Animation.DROP
        };
 
         currentMarker = new google.maps.Marker({
            position: new google.maps.LatLng(allLocations[index]['latitude'], allLocations[index]['longitude']),
            map: map
         });
         
        infoWindow = new google.maps.InfoWindow({ 
            content: text,
            position: googleLatLng
        });
        
        allInfoWindows.push(infoWindow);
        
         //console.log(currentMarker);
         //console.log(googleLatLng);
        google.maps.event.addListener(currentMarker, "click", function(){
            allInfoWindows[index].open(map); 
        });       
        
        otherMarkers.push(currentMarker); 
        
    } else { // Update marker positions
        otherMarkers[index].setPosition(googleLatLng);
        allInfoWindows[index].setPosition(googleLatLng);
    }
}

// Initialize and execute the geolocation tracking
document.getElementById('calculate').onclick = function(event) {
      event.preventDefault(); // Prevent default functionality of submit form
        // Initialize/reset all values
        jQuery('#panel div').html('');
        clearWatch();
        destination = "";
        source = "";
        routeFound = false;
        marker = null;
        googleMap = null;  
        otherMarkers = [];
        currentMode = $('input[name="mode"]:checked').val();
        if(currentMode == "transit"){
            travelMode = google.maps.DirectionsTravelMode.TRANSIT;
        } else if(currentMode == "car") {
            travelMode = google.maps.DirectionsTravelMode.DRIVING;
        } else {
            travelMode = google.maps.DirectionsTravelMode.WALKING;
        }
      // Retrieve values from input box
      source = document.getElementById("source").value;
      destination = document.getElementById("destination").value;
      message.innerHTML = ("");
      // Start tracking geolocation
      execute();
};

